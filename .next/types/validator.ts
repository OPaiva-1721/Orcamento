// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/clientes/[id]/page.tsx
{
  const handler = {} as typeof import("../../app/clientes/[id]/page.js")
  handler satisfies AppPageConfig<"/clientes/[id]">
}

// Validate ../../app/clientes/novo/page.tsx
{
  const handler = {} as typeof import("../../app/clientes/novo/page.js")
  handler satisfies AppPageConfig<"/clientes/novo">
}

// Validate ../../app/clientes/page.tsx
{
  const handler = {} as typeof import("../../app/clientes/page.js")
  handler satisfies AppPageConfig<"/clientes">
}

// Validate ../../app/dashboard/page.tsx
{
  const handler = {} as typeof import("../../app/dashboard/page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ../../app/destinatarios/[id]/page.tsx
{
  const handler = {} as typeof import("../../app/destinatarios/[id]/page.js")
  handler satisfies AppPageConfig<"/destinatarios/[id]">
}

// Validate ../../app/destinatarios/novo/page.tsx
{
  const handler = {} as typeof import("../../app/destinatarios/novo/page.js")
  handler satisfies AppPageConfig<"/destinatarios/novo">
}

// Validate ../../app/destinatarios/page.tsx
{
  const handler = {} as typeof import("../../app/destinatarios/page.js")
  handler satisfies AppPageConfig<"/destinatarios">
}

// Validate ../../app/orcamentos/[id]/page.tsx
{
  const handler = {} as typeof import("../../app/orcamentos/[id]/page.js")
  handler satisfies AppPageConfig<"/orcamentos/[id]">
}

// Validate ../../app/orcamentos/novo/page.tsx
{
  const handler = {} as typeof import("../../app/orcamentos/novo/page.js")
  handler satisfies AppPageConfig<"/orcamentos/novo">
}

// Validate ../../app/orcamentos/page.tsx
{
  const handler = {} as typeof import("../../app/orcamentos/page.js")
  handler satisfies AppPageConfig<"/orcamentos">
}

// Validate ../../app/page.tsx
{
  const handler = {} as typeof import("../../app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../app/api/clientes/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/clientes/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/clientes/[id]">
}

// Validate ../../app/api/clientes/route.ts
{
  const handler = {} as typeof import("../../app/api/clientes/route.js")
  handler satisfies RouteHandlerConfig<"/api/clientes">
}

// Validate ../../app/api/debug-env/route.ts
{
  const handler = {} as typeof import("../../app/api/debug-env/route.js")
  handler satisfies RouteHandlerConfig<"/api/debug-env">
}

// Validate ../../app/api/debug-full/route.ts
{
  const handler = {} as typeof import("../../app/api/debug-full/route.js")
  handler satisfies RouteHandlerConfig<"/api/debug-full">
}

// Validate ../../app/api/debug/route.ts
{
  const handler = {} as typeof import("../../app/api/debug/route.js")
  handler satisfies RouteHandlerConfig<"/api/debug">
}

// Validate ../../app/api/destinatarios/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/destinatarios/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/destinatarios/[id]">
}

// Validate ../../app/api/destinatarios/route.ts
{
  const handler = {} as typeof import("../../app/api/destinatarios/route.js")
  handler satisfies RouteHandlerConfig<"/api/destinatarios">
}

// Validate ../../app/api/enviar-email/route.ts
{
  const handler = {} as typeof import("../../app/api/enviar-email/route.js")
  handler satisfies RouteHandlerConfig<"/api/enviar-email">
}

// Validate ../../app/api/gerar-pdf-editavel-simples/route.ts
{
  const handler = {} as typeof import("../../app/api/gerar-pdf-editavel-simples/route.js")
  handler satisfies RouteHandlerConfig<"/api/gerar-pdf-editavel-simples">
}

// Validate ../../app/api/gerar-pdf/route.ts
{
  const handler = {} as typeof import("../../app/api/gerar-pdf/route.js")
  handler satisfies RouteHandlerConfig<"/api/gerar-pdf">
}

// Validate ../../app/api/migrate/route.ts
{
  const handler = {} as typeof import("../../app/api/migrate/route.js")
  handler satisfies RouteHandlerConfig<"/api/migrate">
}

// Validate ../../app/api/orcamentos/[id]/destinatarios/route.ts
{
  const handler = {} as typeof import("../../app/api/orcamentos/[id]/destinatarios/route.js")
  handler satisfies RouteHandlerConfig<"/api/orcamentos/[id]/destinatarios">
}

// Validate ../../app/api/orcamentos/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/orcamentos/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/orcamentos/[id]">
}

// Validate ../../app/api/orcamentos/route.ts
{
  const handler = {} as typeof import("../../app/api/orcamentos/route.js")
  handler satisfies RouteHandlerConfig<"/api/orcamentos">
}

// Validate ../../app/api/test-all-configs/route.ts
{
  const handler = {} as typeof import("../../app/api/test-all-configs/route.js")
  handler satisfies RouteHandlerConfig<"/api/test-all-configs">
}

// Validate ../../app/api/test-connection/route.ts
{
  const handler = {} as typeof import("../../app/api/test-connection/route.js")
  handler satisfies RouteHandlerConfig<"/api/test-connection">
}

// Validate ../../app/api/test-db/route.ts
{
  const handler = {} as typeof import("../../app/api/test-db/route.js")
  handler satisfies RouteHandlerConfig<"/api/test-db">
}

// Validate ../../app/api/test-supabase/route.ts
{
  const handler = {} as typeof import("../../app/api/test-supabase/route.js")
  handler satisfies RouteHandlerConfig<"/api/test-supabase">
}

// Validate ../../app/api/test/route.ts
{
  const handler = {} as typeof import("../../app/api/test/route.js")
  handler satisfies RouteHandlerConfig<"/api/test">
}





// Validate ../../app/dashboard/layout.tsx
{
  const handler = {} as typeof import("../../app/dashboard/layout.js")
  handler satisfies LayoutConfig<"/dashboard">
}

// Validate ../../app/layout.tsx
{
  const handler = {} as typeof import("../../app/layout.js")
  handler satisfies LayoutConfig<"/">
}
