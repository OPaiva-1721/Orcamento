{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "origin-when-cross-origin"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/clientes/[id]",
      "regex": "^/api/clientes/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/clientes/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/destinatarios/[id]",
      "regex": "^/api/destinatarios/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/destinatarios/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/orcamentos/[id]",
      "regex": "^/api/orcamentos/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/orcamentos/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/orcamentos/[id]/destinatarios",
      "regex": "^/api/orcamentos/([^/]+?)/destinatarios(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/orcamentos/(?<nxtPid>[^/]+?)/destinatarios(?:/)?$"
    },
    {
      "page": "/clientes/[id]",
      "regex": "^/clientes/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/clientes/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/destinatarios/[id]",
      "regex": "^/destinatarios/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/destinatarios/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/orcamentos/[id]",
      "regex": "^/orcamentos/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/orcamentos/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/clientes",
      "regex": "^/clientes(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/clientes(?:/)?$"
    },
    {
      "page": "/clientes/novo",
      "regex": "^/clientes/novo(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/clientes/novo(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/destinatarios",
      "regex": "^/destinatarios(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/destinatarios(?:/)?$"
    },
    {
      "page": "/destinatarios/novo",
      "regex": "^/destinatarios/novo(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/destinatarios/novo(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/orcamentos",
      "regex": "^/orcamentos(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/orcamentos(?:/)?$"
    },
    {
      "page": "/orcamentos/novo",
      "regex": "^/orcamentos/novo(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/orcamentos/novo(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}