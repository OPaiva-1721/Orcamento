// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.5.2"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id            Int             @id @default(autoincrement())
  nome          String
  cnpj          String
  email         String          @unique
  telefone      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  destinatarios Destinatario[]
  orcamentos    Orcamento[]
}

model Destinatario {
  id            Int             @id @default(autoincrement())
  nome          String
  email         String
  clienteId     Int
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  cliente       Cliente         @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  orcamentos    Orcamento[]     @relation("OrcamentoDestinatarios")
  emailsEnviados EmailEnviado[]
  
  @@unique([email, clienteId])
}

model Orcamento {
  id              Int             @id @default(autoincrement())
  descricao       String
  preco           Float
  status          String          @default("Pendente")
  formaPagamento  Boolean         @default(false) // true = "7 dias ap√≥s o vencimento da nota"
  dataInicio      DateTime
  dataTermino     DateTime?
  clienteId       Int
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  cliente         Cliente         @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  destinatarios   Destinatario[]  @relation("OrcamentoDestinatarios")
  emailsEnviados  EmailEnviado[]
  statusHistory   StatusHistory[]
}

model EmailEnviado {
  id              Int             @id @default(autoincrement())
  orcamentoId     Int
  destinatarioId  Int
  dataEnvio       DateTime        @default(now())
  status          String          @default("Enviado")
  orcamento       Orcamento       @relation(fields: [orcamentoId], references: [id], onDelete: Cascade)
  destinatario    Destinatario    @relation(fields: [destinatarioId], references: [id], onDelete: Cascade)
  
  @@unique([orcamentoId, destinatarioId])
}

model StatusHistory {
  id          Int       @id @default(autoincrement())
  orcamentoId Int
  status      String
  dataMudanca DateTime  @default(now())
  observacao  String?
  orcamento   Orcamento @relation(fields: [orcamentoId], references: [id], onDelete: Cascade)
  
  @@index([orcamentoId])
}